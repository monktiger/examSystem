<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.monktiger.examsystem.mapper.ExamMapper">
  <resultMap id="BaseResultMap" type="com.monktiger.examsystem.entity.Exam">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="type" jdbcType="BIT" property="type" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="publisherId" jdbcType="VARCHAR" property="publisherId" />
    <result column="beginTime" jdbcType="TIMESTAMP" property="beginTime" />
    <result column="endTime" jdbcType="TIMESTAMP" property="endTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, `name`, `type`, score, `status`, publisherId, beginTime, endTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_exam
    where id = #{id,jdbcType=INTEGER}
  </select>
    <select id="selectExamByGroup" resultType="com.monktiger.examsystem.entity.Exam">
      select
      <include refid="Base_Column_List" />
      from tb_exam
      where id in
      <if test="examIdList!=null">
        <foreach collection="examIdList" item="id" index="index" open="(" close=")" separator=",">
         #{id}
        </foreach>
      </if>
    </select>
  <select id="selectExamByGroupAndStatus" resultType="com.monktiger.examsystem.entity.Exam">
    select *
    from tb_exam
    <where>
      <if test="examIdList!=null">
        id in
        <foreach collection="examIdList" item="id" index="index" open="(" separator="," close=")" >
          #{id}
        </foreach>
      </if>
      and status in (1,2,3)
    </where>
  </select>
  <select id="getPrepareExam" resultType="com.monktiger.examsystem.entity.Exam">
    select *
    from tb_exam
    where status = 0 and
    TIMESTAMPDIFF(MINUTE,beginTime,now())&gt;=-15
  </select>
  <select id="getEndExam" resultType="com.monktiger.examsystem.entity.Exam">
    select *
    from tb_exam
    where status = 2 and
    TIMESTAMPDIFF(SECOND,endTime,now())&gt;=0
  </select>
  <select id="getbeginExam" resultType="com.monktiger.examsystem.entity.Exam">
        select *
    from tb_exam
    where status = 1 and
    TIMESTAMPDIFF(SECOND,beginTime,now())&gt;=0
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_exam
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.monktiger.examsystem.entity.Exam">
    insert into tb_exam (id, `name`, `type`, score, 
      `status`, publisherId, beginTime,
      endTime)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=BIT}, #{score,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{publisherId,jdbcType=VARCHAR}, #{beginTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.monktiger.examsystem.entity.Exam" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
    insert into tb_exam
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="publisherId != null">
        publisherId,
      </if>
      <if test="beginTime != null">
        beginTime,
      </if>
      <if test="endTime != null">
        endTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=BIT},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="publisherId != null">
        #{publisherId,jdbcType=VARCHAR},
      </if>
      <if test="beginTime != null">
        #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.monktiger.examsystem.entity.Exam">
    update tb_exam
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=BIT},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="publisherId != null">
        publisherId = #{publisherId,jdbcType=VARCHAR},
      </if>
      <if test="beginTime != null">
        beginTime = #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        endTime = #{endTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.monktiger.examsystem.entity.Exam">
    update tb_exam
    set `name` = #{name,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=BIT},
      score = #{score,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER},
      publisherId = #{publisherId,jdbcType=VARCHAR},
      beginTime = #{beginTime,jdbcType=TIMESTAMP},
      endTime = #{endTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateExamListStatus">
    update tb_exam
    set `status` = #{status,jdbcType=INTEGER}
    where
      id in
      <if test="examList!=null">
      <foreach collection="examList" item="exam" index="index" open="(" close=")" separator=",">
        #{exam.id}
      </foreach>
      </if>
  </update>
</mapper>