<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.monktiger.examsystem.mapper.CopyMapper">
  <resultMap id="BaseResultMap" type="com.monktiger.examsystem.entity.Copy">
    <id column="copyId" jdbcType="INTEGER" property="copyId" />
    <result column="groupId" jdbcType="VARCHAR" property="groupId" />
    <result column="examId" jdbcType="INTEGER" property="examId" />
    <result column="openId" jdbcType="VARCHAR" property="openId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="judge" jdbcType="VARCHAR" property="judge" />
    <result column="score" jdbcType="INTEGER" property="score" />
  </resultMap>
  <sql id="Base_Column_List">
    copyId, groupId, examId, openId, `status`, judge, score
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_copy
    where copyId = #{copyId,jdbcType=INTEGER}
  </select>
    <select id="selectByAssociaiton" resultType="com.monktiger.examsystem.entity.Copy">
      select
      <include refid="Base_Column_List" />
      from tb_copy
      where examId = #{examId}
      and openId = #{openId}
    </select>
  <select id="selectByGroupAndExam" resultType="com.monktiger.examsystem.entity.Copy">
    select
    <include refid="Base_Column_List"/>
    from tb_copy
    where examId = #{examId}
    and groupId = #{groupId}
  </select>
  <select id="checkCopyPublisher" resultType="integer">
    select
    count (*)
    where copyId = #{copyId,jdbcType=INTEGER}
    and openId = #{openId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_copy
    where copyId = #{copyId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.monktiger.examsystem.entity.Copy">
    insert into tb_copy (copyId, groupId, examId, 
      openId, `status`, judge, 
      score)
    values (#{copyId,jdbcType=INTEGER}, #{groupId,jdbcType=VARCHAR}, #{examId,jdbcType=INTEGER}, 
      #{openId,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{judge,jdbcType=VARCHAR}, 
      #{score,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.monktiger.examsystem.entity.Copy">
    insert into tb_copy
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="copyId != null">
        copyId,
      </if>
      <if test="groupId != null">
        groupId,
      </if>
      <if test="examId != null">
        examId,
      </if>
      <if test="openId != null">
        openId,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="judge != null">
        judge,
      </if>
      <if test="score != null">
        score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="copyId != null">
        #{copyId,jdbcType=INTEGER},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=VARCHAR},
      </if>
      <if test="examId != null">
        #{examId,jdbcType=INTEGER},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="judge != null">
        #{judge,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <insert id="createCopyList">
    insert into tb_copy (groupId,examId,openId,`status`)
    values
      <if test="groupList!=null">
        <foreach collection="groupList" item="group" index="index" separator=",">
          (#{groupId,jdbcType=VARCHAR},#{id,jdbcType=INTEGER},#{group.openId,jdbcType=VARCHAR},#{status,jdbcType=INTEGER})
        </foreach>
      </if>
  </insert>
    <insert id="createCopyList2">
      insert into tb_copy (groupId,examId,openId,`status`)
      values
      <if test="groupList!=null">
        <foreach collection="groupList" item="group" index="index" separator=",">
          (#{groupList.groupId,jdbcType=VARCHAR},#{id,jdbcType=INTEGER},#{group.openId,jdbcType=VARCHAR},#{status,jdbcType=INTEGER})
        </foreach>
      </if>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.monktiger.examsystem.entity.Copy">
    update tb_copy
    <set>
      <if test="groupId != null">
        groupId = #{groupId,jdbcType=VARCHAR},
      </if>
      <if test="examId != null">
        examId = #{examId,jdbcType=INTEGER},
      </if>
      <if test="openId != null">
        openId = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="judge != null">
        judge = #{judge,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
    </set>
    where copyId = #{copyId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.monktiger.examsystem.entity.Copy">
    update tb_copy
    set groupId = #{groupId,jdbcType=VARCHAR},
      examId = #{examId,jdbcType=INTEGER},
      openId = #{openId,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER},
      judge = #{judge,jdbcType=VARCHAR},
      score = #{score,jdbcType=INTEGER}
    where copyId = #{copyId,jdbcType=INTEGER}
  </update>
  <update id="updateJudge">
    update tb_copy
    set judge = #{judge,jdbcType=VARCHAR}
    where copyId = #{copyId,jdbcType=INTEGER}
  </update>
  <update id="updateByExamList">
    update tb_copy
    set `status`=1
    where examId in <foreach collection="examList" item="exam" index="index" open="(" close=")" separator=",">
    #{exam.id}
  </foreach>
  </update>
  <update id="updateByExam">
    update tb_copy
    set    `status` = #{status}
    where examId = #{id}
  </update>
</mapper>