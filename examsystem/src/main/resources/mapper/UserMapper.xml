<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.monktiger.examsystem.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.monktiger.examsystem.entity.User">
    <id column="open_id" jdbcType="VARCHAR" property="openId" />
    <result column="nickName" jdbcType="VARCHAR" property="nickname" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="avatarUrl" jdbcType="VARCHAR" property="avatarurl" />
    <result column="available" jdbcType="BIT" property="available" />
  </resultMap>
  <sql id="Base_Column_List">
    open_id, nickName, `name`, avatarUrl, available
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_user
    where open_id = #{openId,jdbcType=VARCHAR}
  </select>
  <select id="selectByIds" resultType="com.monktiger.examsystem.entity.User">
    select
    `name`,open_id,avatarUrl
    from tb_user
    <where>
      <if test="groups!=null">
        <foreach collection="groups" item="group" open="(" close=")" separator=",">
          open_id = #{group.open_id,jdbcType=VARCHAR}
        </foreach>
      </if>
    </where>
  </select>
  <select id="getUserCount" resultType="java.lang.Integer">
    select count(*)
    from tb_user
    where <if test="search!=null">
    locate(#{search},`name`)&gt;0
    or locate(#{search},nickName)&gt;0
  </if>
  </select>
  <select id="getCountUser" resultType="com.monktiger.examsystem.entity.User">
    select open_id, nickName, `name`, available
    from tb_user
    where <if test="search!=null">
    locate(#{search},`name`)&gt;0
    or locate(#{search},nickName)&gt;0
  </if>
  limit #{startIndex},#{pageSize};
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_user
    where open_id = #{openId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.monktiger.examsystem.entity.User">
    insert into tb_user (open_id, nickName, `name`, 
      avatarUrl, available)
    values (#{openId,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{avatarurl,jdbcType=VARCHAR}, #{available,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.monktiger.examsystem.entity.User">
    insert into tb_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="openId != null">
        open_id,
      </if>
      <if test="nickname != null">
        nickName,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="avatarurl != null">
        avatarUrl,
      </if>
      <if test="available != null">
        available,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="openId != null">
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="avatarurl != null">
        #{avatarurl,jdbcType=VARCHAR},
      </if>
      <if test="available != null">
        #{available,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.monktiger.examsystem.entity.User">
    update tb_user
    set
    <if test="nickname!=null">nickName = #{nickname,jdbcType=VARCHAR},</if>
  <if test="name!=null">  `name` = #{name,jdbcType=VARCHAR},</if>
 <if test="avatarurl!=null"> avatarUrl = #{avatarurl,jdbcType=VARCHAR},</if>
 <if test="available!=null">       available = #{available,jdbcType=BIT},</if>
        where open_id = #{openId,jdbcType=VARCHAR}
        </update>
</mapper>